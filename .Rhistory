points(input$value_Cylindrée, predict(model1, data.frame(Cylindrée = input$value_Cylindrée)), col = "red", pch = 19)
} else if (input$model2 == "Litre") {
plot(num_vars$Litre, num_vars$Litre,
xlab = "........", ylab = "..............",
main = "Régression linéaire : Prix en fonction de Puissance du Moteur")
abline(model2, col = "blue")
points(input$value_Litre, predict(model2, data.frame(Litre = input$value_Litre)), col = "red", pch = 19)
} else if (input$model3 == "Régulateur") {
plot(num_vars$Régulateur, num_vars$Prix,
xlab = ".............", ylab = "............",
main = "Régression linéaire : Prix en fonction de Régulateur")
abline(model3, col = "blue")
points(input$value_Régulateur, predict(model3, data.frame(Régulateur = input$value_Régulateur)), col = "red", pch = 19)
}
})
}
# Lancer l'application
shinyApp(ui = ui, server = server)
# La logique serveur
server <- function(input, output) {
# Faire des prédictions basées sur l'entrée de l'utilisateur
output$prediction <- renderText({
if (input$model == "Cylindrée") {
new_data <- data.frame(Cylindrée = input$value_Cylindrée)
predicted_Prix <- predict(model1, new_data)
} else if (input$model == "Litre") {
new_data <- data.frame(Litre = input$value_Litre)
predicted_Prix <- predict(model2, new_data)
} else if (input$model == "Régulateur") {
new_data <- data.frame(Régulateur = input$value_Régulateur)
predicted_Prix <- predict(model3, new_data)
}
paste("Le Prix predit est:", round(predicted_Prix, 7), "en U.S $")
})
# Créer un graphique de la régression
output$plot <- renderPlot({
if (input$model1 == "Cylindrée") {
plot(num_vars$Cylindrée, num_vars$Prix,
xlab = "........", ylab = "..........",
main = "Régression linéaire : Prix en fonction de Cylindrée")
abline(model1, col = "blue")
points(input$value_Cylindrée, predict(model1, data.frame(Cylindrée = input$value_Cylindrée)), col = "red", pch = 19)
} else if (input$model2 == "Litre") {
plot(num_vars$Litre, num_vars$Litre,
xlab = "........", ylab = "..............",
main = "Régression linéaire : Prix en fonction de Puissance du Moteur")
abline(model2, col = "blue")
points(input$value_Litre, predict(model2, data.frame(Litre = input$value_Litre)), col = "red", pch = 19)
} else if (input$model3 == "Régulateur") {
plot(num_vars$Régulateur, num_vars$Prix,
xlab = ".............", ylab = "............",
main = "Régression linéaire : Prix en fonction de Régulateur")
abline(model3, col = "blue")
points(input$value_Régulateur, predict(model3, data.frame(Régulateur = input$value_Régulateur)), col = "red", pch = 19)
}
})
}
# Lancer l'application
shinyApp(ui = ui, server = server)
# La logique serveur
server <- function(input, output) {
# Faire des prédictions basées sur l'entrée de l'utilisateur
output$prediction <- renderText({
if (input$model == "Cylindrée") {
new_data <- data.frame(Cylindrée = input$value_Cylindrée)
predicted_Prix <- predict(model1, new_data)
} else if (input$model == "Litre") {
new_data <- data.frame(Litre = input$value_Litre)
predicted_Prix <- predict(model2, new_data)
} else if (input$model == "Régulateur") {
new_data <- data.frame(Régulateur = input$value_Régulateur)
predicted_Prix <- predict(model3, new_data)
}
paste("Le Prix predit est:", round(predicted_Prix, 7), "en U.S $")
})
# Créer un graphique de la régression
output$plot <- renderPlot({
if (input$model == "Cylindrée") {
plot(num_vars$Cylindrée, num_vars$Prix,
xlab = "........", ylab = "..........",
main = "Régression linéaire : Prix en fonction de Cylindrée")
abline(model1, col = "blue")
points(input$value_Cylindrée, predict(model1, data.frame(Cylindrée = input$value_Cylindrée)), col = "red", pch = 19)
} else if (input$model == "Litre") {
plot(num_vars$Litre, num_vars$Litre,
xlab = "........", ylab = "..............",
main = "Régression linéaire : Prix en fonction de Puissance du Moteur")
abline(model2, col = "blue")
points(input$value_Litre, predict(model2, data.frame(Litre = input$value_Litre)), col = "red", pch = 19)
} else if (input$model == "Régulateur") {
plot(num_vars$Régulateur, num_vars$Prix,
xlab = ".............", ylab = "............",
main = "Régression linéaire : Prix en fonction de Régulateur")
abline(model3, col = "blue")
points(input$value_Régulateur, predict(model3, data.frame(Régulateur = input$value_Régulateur)), col = "red", pch = 19)
}
})
}
# Lancer l'application
shinyApp(ui = ui, server = server)
library(shiny)
# Définir l'interface utilisateur
ui <- fluidPage(
titlePanel("Prédictions de Prix de voitures de fabrication americaine sur le marche des Etats-Unis selon le Régulateur, le Litre ou le Cylindrée"),
sidebarLayout(
sidebarPanel(
selectInput("model", "Choisir le modèle de régression"
choices = list("Cylindrée" = "Cylindrée",
# La logique serveur
server <- function(input, output) {
# Faire des prédictions basées sur l'entrée de l'utilisateur
output$prediction <- renderText({
if (input$model == "Cylindrée") {
new_data <- data.frame(Cylindrée = input$value_Cylindrée)
predicted_Prix <- predict(model1, new_data)
} else if (input$model == "Litre") {
new_data <- data.frame(Litre = input$value_Litre)
predicted_Prix <- predict(model2, new_data)
} else if (input$model == "Régulateur") {
new_data <- data.frame(Régulateur = input$value_Régulateur)
predicted_Prix <- predict(model3, new_data)
}
paste("Le Prix predit est:", round(predicted_Prix, 7), "en U.S $")
})
# Créer un graphique de la régression
output$plot <- renderPlot({
if (input$model == "Cylindrée") {
plot(num_vars$Cylindrée, num_vars$Prix,
xlab = "........", ylab = "..........",
main = "Régression linéaire : Prix en fonction de Cylindrée")
abline(model1, col = "blue")
points(input$value_Cylindrée, predict(model1, data.frame(Cylindrée = input$value_Cylindrée)), col = "red", pch = 19)
} else if (input$model == "Litre") {
plot(num_vars$Litre, num_vars$Litre,
xlab = "........", ylab = "..............",
main = "Régression linéaire : Prix en fonction de Puissance du Moteur")
abline(model2, col = "blue")
points(input$value_Litre, predict(model2, data.frame(Litre = input$value_Litre)), col = "red", pch = 19)
} else if (input$model == "Régulateur") {
plot(num_vars$Régulateur, num_vars$Prix,
xlab = ".............", ylab = "............",
main = "Régression linéaire : Prix en fonction de Régulateur")
abline(model3, col = "blue")
points(input$value_Régulateur, predict(model3, data.frame(Régulateur = input$value_Régulateur)), col = "red", pch = 19)
}
})
}
# Lancer l'application
shinyApp(ui = ui, server = server)
library(shiny)
# Définir l'interface utilisateur
ui <- fluidPage(
titlePanel("Prédictions de Prix de voitures de fabrication americaine sur le marche des Etats-Unis selon le Régulateur, le Litre ou le Cylindrée"),
sidebarLayout(
sidebarPanel(
selectInput("model", "Choisir le modèle de régression: Prix, ",
choices = list("Cylindrée" = "Cylindrée",
"Litre" = "Litre",
"Régulateur" = "Régulateur")),
conditionalPanel(
condition = "input.model1 == 'Cylindrée'",
sliderInput("value_Cylindrée", "Cylindrée",
min = min(num_vars$Cylindrée), max = max(num_vars$Cylindrée),
value = mean(num_vars$Cylindrée))
),
conditionalPanel(
condition = "input.model2 == 'Litre'",
sliderInput("value_Litre", "Litre",
min = min(num_vars$Litre), max = max(num_vars$Litre),
value = mean(num_vars$Litre))
),
conditionalPanel(
condition = "input.model3 == 'Régulateur'",
sliderInput("value_Régulateur", "Régulateur",
min = min(num_vars$Régulateur), max = max(num_vars$Régulateur),
value = mean(num_vars$Régulateur))
)
),
mainPanel(
textOutput("prediction"),
plotOutput("plot")
)
)
)
# La logique serveur
server <- function(input, output) {
# Faire des prédictions basées sur l'entrée de l'utilisateur
output$prediction <- renderText({
if (input$model == "Cylindrée") {
new_data <- data.frame(Cylindrée = input$value_Cylindrée)
predicted_Prix <- predict(model1, new_data)
} else if (input$model == "Litre") {
new_data <- data.frame(Litre = input$value_Litre)
predicted_Prix <- predict(model2, new_data)
} else if (input$model == "Régulateur") {
new_data <- data.frame(Régulateur = input$value_Régulateur)
predicted_Prix <- predict(model3, new_data)
}
paste("Le Prix predit est:", round(predicted_Prix, 7), "en U.S $")
})
# Créer un graphique de la régression
output$plot <- renderPlot({
if (input$model == "Cylindrée") {
plot(num_vars$Cylindrée, num_vars$Prix,
xlab = "........", ylab = "..........",
main = "Régression linéaire : Prix en fonction de Cylindrée")
abline(model1, col = "blue")
points(input$value_Cylindrée, predict(model1, data.frame(Cylindrée = input$value_Cylindrée)), col = "red", pch = 19)
} else if (input$model == "Litre") {
plot(num_vars$Litre, num_vars$Litre,
xlab = "........", ylab = "..............",
main = "Régression linéaire : Prix en fonction de Puissance du Moteur")
abline(model2, col = "blue")
points(input$value_Litre, predict(model2, data.frame(Litre = input$value_Litre)), col = "red", pch = 19)
} else if (input$model == "Régulateur") {
plot(num_vars$Régulateur, num_vars$Prix,
xlab = ".............", ylab = "............",
main = "Régression linéaire : Prix en fonction de Régulateur")
abline(model3, col = "blue")
points(input$value_Régulateur, predict(model3, data.frame(Régulateur = input$value_Régulateur)), col = "red", pch = 19)
}
})
}
# Lancer l'application
shinyApp(ui = ui, server = server)
# La logique serveur
server <- function(input, output) {
# Faire des prédictions basées sur l'entrée de l'utilisateur
output$prediction <- renderText({
if (input$model == "Cylindrée") {
new_data <- data.frame(Cylindrée = input$value_Cylindrée)
predicted_Prix <- predict(model1, new_data)
} else if (input$model == "Litre") {
new_data <- data.frame(Litre = input$value_Litre)
predicted_Prix <- predict(model2, new_data)
} else if (input$model == "Régulateur") {
new_data <- data.frame(Régulateur = input$value_Régulateur)
predicted_Prix <- predict(model3, new_data)
}
paste("Le Prix predit est:", round(predicted_Prix, 7), "en U.S $")
})
# Créer un graphique de la régression
output$plot <- renderPlot({
if (input$model == "Cylindrée") {
plot(num_vars$Cylindrée, num_vars$Prix,
xlab = "........", ylab = "..........",
main = "Régression: Prix en fonction de Cylindrée")
abline(model1, col = "blue")
points(input$value_Cylindrée, predict(model1, data.frame(Cylindrée = input$value_Cylindrée)), col = "red", pch = 19)
} else if (input$model == "Litre") {
plot(num_vars$Litre, num_vars$Litre,
xlab = "........", ylab = "..............",
main = "Régression : Prix en fonction de Puissance du Moteur")
abline(model2, col = "blue")
points(input$value_Litre, predict(model2, data.frame(Litre = input$value_Litre)), col = "red", pch = 19)
} else if (input$model == "Régulateur") {
plot(num_vars$Régulateur, num_vars$Prix,
xlab = ".............", ylab = "............",
main = "Régression : Prix en fonction de Régulateur")
abline(model3, col = "blue")
points(input$value_Régulateur, predict(model3, data.frame(Régulateur = input$value_Régulateur)), col = "red", pch = 19)
}
})
}
# Lancer l'application
shinyApp(ui = ui, server = server)
# La logique serveur
server <- function(input, output) {
# Faire des prédictions basées sur l'entrée de l'utilisateur
output$prediction <- renderText({
if (input$model == "Cylindrée") {
new_data <- data.frame(Cylindrée = input$value_Cylindrée)
predicted_Prix <- predict(model1, new_data)
} else if (input$model == "Litre") {
new_data <- data.frame(Litre = input$value_Litre)
predicted_Prix <- predict(model2, new_data)
} else if (input$model == "Régulateur") {
new_data <- data.frame(Régulateur = input$value_Régulateur)
predicted_Prix <- predict(model3, new_data)
}
paste("Le Prix predit est:", round(predicted_Prix, 7), "en U.S $")
})
# Créer un graphique de la régression
output$plot <- renderPlot({
if (input$model == "Cylindrée") {
plot(num_vars$Cylindrée, num_vars$Prix,
xlab = "Cylindrée", ylab = "Prix",
main = "Régression: Prix en fonction de Cylindrée")
abline(model1, col = "blue")
points(input$value_Cylindrée, predict(model1, data.frame(Cylindrée = input$value_Cylindrée)), col = "red", pch = 19)
} else if (input$model == "Litre") {
plot(num_vars$Litre, num_vars$Litre,
xlab = "Litre", ylab = "Prix",
main = "Régression : Prix en fonction de Puissance du Moteur")
abline(model2, col = "blue")
points(input$value_Litre, predict(model2, data.frame(Litre = input$value_Litre)), col = "red", pch = 19)
} else if (input$model == "Régulateur") {
plot(num_vars$Régulateur, num_vars$Prix,
xlab = "Régulateur", ylab = "Prix",
main = "Régression : Prix en fonction de Régulateur")
abline(model3, col = "blue")
points(input$value_Régulateur, predict(model3, data.frame(Régulateur = input$value_Régulateur)), col = "red", pch = 19)
}
})
}
# Lancer l'application
shinyApp(ui = ui, server = server)
# La logique serveur
server <- function(input, output) {
# Faire des prédictions basées sur l'entrée de l'utilisateur
output$prediction <- renderText({
if (input$model == "Cylindrée") {
new_data <- data.frame(Cylindrée = input$value_Cylindrée)
predicted_Prix <- predict(model1, new_data)
} else if (input$model == "Litre") {
new_data <- data.frame(Litre = input$value_Litre)
predicted_Prix <- predict(model2, new_data)
} else if (input$model == "Régulateur") {
new_data <- data.frame(Régulateur = input$value_Régulateur)
predicted_Prix <- predict(model3, new_data)
}
paste("Le Prix predit est:", round(predicted_Prix, 7), "en U.S $")
})
# Créer un graphique de la régression
output$plot <- renderPlot({
if (input$model == "Cylindrée") {
plot(num_vars$Cylindrée, num_vars$Prix,
xlab = "Cylindrée", ylab = "Prix",
main = "Régression: Prix en fonction de Cylindrée")
abline(model1, col = "blue")
points(input$value_Cylindrée, predict(model1, data.frame(Cylindrée = input$value_Cylindrée)), col = "red", pch = 19)
} else if (input$model == "Litre") {
plot(num_vars$Litre, num_vars$Prix,
xlab = "Litre", ylab = "Prix",
main = "Régression : Prix en fonction de Puissance du Moteur")
abline(model2, col = "blue")
points(input$value_Litre, predict(model2, data.frame(Litre = input$value_Litre)), col = "red", pch = 19)
} else if (input$model == "Régulateur") {
plot(num_vars$Régulateur, num_vars$Prix,
xlab = "Régulateur", ylab = "Prix",
main = "Régression : Prix en fonction de Régulateur")
abline(model3, col = "blue")
points(input$value_Régulateur, predict(model3, data.frame(Régulateur = input$value_Régulateur)), col = "red", pch = 19)
}
})
}
# Lancer l'application
shinyApp(ui = ui, server = server)
# La logique serveur
server <- function(input, output) {
# Faire des prédictions basées sur l'entrée de l'utilisateur
output$prediction <- renderText({
if (input$model == "Cylindrée") {
new_data <- data.frame(Cylindrée = input$value_Cylindrée)
predicted_Prix <- predict(model1, new_data)
} else if (input$model == "Litre") {
new_data <- data.frame(Litre = input$value_Litre)
predicted_Prix <- predict(model2, new_data)
} else if (input$model == "Régulateur") {
new_data <- data.frame(Régulateur = input$value_Régulateur)
predicted_Prix <- predict(model3, new_data)
}
paste("Le Prix predit est:", round(predicted_Prix, 7), "en U.S $")
})
# Créer un graphique de la régression
output$plot <- renderPlot({
if (input$model == "Cylindrée") {
plot(num_vars$Cylindrée, num_vars$Prix,
xlab = "Cylindrée", ylab = "Prix",
main = "Régression: Prix en fonction de Cylindrée")
abline(model1, col = "blue")
points(input$value_Cylindrée, predict(model1, data.frame(Cylindrée = input$value_Cylindrée)), col = "red", pch = 27)
} else if (input$model == "Litre") {
plot(num_vars$Litre, num_vars$Prix,
xlab = "Litre", ylab = "Prix",
main = "Régression : Prix en fonction de Puissance du Moteur")
abline(model2, col = "blue")
points(input$value_Litre, predict(model2, data.frame(Litre = input$value_Litre)), col = "red", pch = 27)
} else if (input$model == "Régulateur") {
plot(num_vars$Régulateur, num_vars$Prix,
xlab = "Régulateur", ylab = "Prix",
main = "Régression : Prix en fonction de Régulateur")
abline(model3, col = "blue")
points(input$value_Régulateur, predict(model3, data.frame(Régulateur = input$value_Régulateur)), col = "red", pch = 27)
}
})
}
# Lancer l'application
shinyApp(ui = ui, server = server)
# La logique serveur
server <- function(input, output) {
# Faire des prédictions basées sur l'entrée de l'utilisateur
output$prediction <- renderText({
if (input$model == "Cylindrée") {
new_data <- data.frame(Cylindrée = input$value_Cylindrée)
predicted_Prix <- predict(model1, new_data)
} else if (input$model == "Litre") {
new_data <- data.frame(Litre = input$value_Litre)
predicted_Prix <- predict(model2, new_data)
} else if (input$model == "Régulateur") {
new_data <- data.frame(Régulateur = input$value_Régulateur)
predicted_Prix <- predict(model3, new_data)
}
paste("Le Prix predit est:", round(predicted_Prix, 2), "en U.S $")
})
# Créer un graphique de la régression
output$plot <- renderPlot({
if (input$model == "Cylindrée") {
plot(num_vars$Cylindrée, num_vars$Prix,
xlab = "Cylindrée", ylab = "Prix",
main = "Régression: Prix en fonction de Cylindrée")
abline(model1, col = "blue")
points(input$value_Cylindrée, predict(model1, data.frame(Cylindrée = input$value_Cylindrée)), col = "red", pch = 19)
} else if (input$model == "Litre") {
plot(num_vars$Litre, num_vars$Prix,
xlab = "Litre", ylab = "Prix",
main = "Régression : Prix en fonction de Puissance du Moteur")
abline(model2, col = "blue")
points(input$value_Litre, predict(model2, data.frame(Litre = input$value_Litre)), col = "red", pch = 19)
} else if (input$model == "Régulateur") {
plot(num_vars$Régulateur, num_vars$Prix,
xlab = "Régulateur", ylab = "Prix",
main = "Régression : Prix en fonction de Régulateur")
abline(model3, col = "blue")
points(input$value_Régulateur, predict(model3, data.frame(Régulateur = input$value_Régulateur)), col = "red", pch = 19)
}
})
}
# Lancer l'application
shinyApp(ui = ui, server = server)
# La logique serveur
server <- function(input, output) {
# Faire des prédictions basées sur l'entrée de l'utilisateur
output$prediction <- renderText({
if (input$model == "Cylindrée") {
new_data <- data.frame(Cylindrée = input$value_Cylindrée)
predicted_Prix <- predict(model1, new_data)
} else if (input$model == "Litre") {
new_data <- data.frame(Litre = input$value_Litre)
predicted_Prix <- predict(model2, new_data)
} else if (input$model == "Régulateur") {
new_data <- data.frame(Régulateur = input$value_Régulateur)
predicted_Prix <- predict(model3, new_data)
}
paste("Le Prix predit est:", round(predicted_Prix, 2), "en U.S $")
})
# Créer un graphique de la régression
output$plot <- renderPlot({
if (input$model == "Cylindrée") {
plot(num_vars$Cylindrée, num_vars$Prix,
xlab = "Cylindrée", ylab = "Prix",
main = "Régression: Prix en fonction de Cylindrée")
abline(model1, col = "blue")
points(input$value_Cylindrée, predict(model1, data.frame(Cylindrée = input$value_Cylindrée)), col = "red", pch = 13)
} else if (input$model == "Litre") {
plot(num_vars$Litre, num_vars$Prix,
xlab = "Litre", ylab = "Prix",
main = "Régression : Prix en fonction de Puissance du Moteur")
abline(model2, col = "blue")
points(input$value_Litre, predict(model2, data.frame(Litre = input$value_Litre)), col = "red", pch = 13)
} else if (input$model == "Régulateur") {
plot(num_vars$Régulateur, num_vars$Prix,
xlab = "Régulateur", ylab = "Prix",
main = "Régression : Prix en fonction de Régulateur")
abline(model3, col = "blue")
points(input$value_Régulateur, predict(model3, data.frame(Régulateur = input$value_Régulateur)), col = "red", pch = 13)
}
})
}
# Lancer l'application
shinyApp(ui = ui, server = server)
# La logique serveur
server <- function(input, output) {
# Faire des prédictions basées sur l'entrée de l'utilisateur
output$prediction <- renderText({
if (input$model == "Cylindrée") {
new_data <- data.frame(Cylindrée = input$value_Cylindrée)
predicted_Prix <- predict(model1, new_data)
} else if (input$model == "Litre") {
new_data <- data.frame(Litre = input$value_Litre)
predicted_Prix <- predict(model2, new_data)
} else if (input$model == "Régulateur") {
new_data <- data.frame(Régulateur = input$value_Régulateur)
predicted_Prix <- predict(model3, new_data)
}
paste("Le Prix predit est:", round(predicted_Prix, 2), "en U.S $")
})
# Créer un graphique de la régression
output$plot <- renderPlot({
if (input$model == "Cylindrée") {
plot(num_vars$Cylindrée, num_vars$Prix,
xlab = "Cylindrée", ylab = "Prix",
main = "Régression: Prix en fonction de Cylindrée")
abline(model1, col = "blue")
points(input$value_Cylindrée, predict(model1, data.frame(Cylindrée = input$value_Cylindrée)), col = "red", pch = 17)
} else if (input$model == "Litre") {
plot(num_vars$Litre, num_vars$Prix,
xlab = "Litre", ylab = "Prix",
main = "Régression : Prix en fonction de Puissance du Moteur")
abline(model2, col = "blue")
points(input$value_Litre, predict(model2, data.frame(Litre = input$value_Litre)), col = "red", pch = 17)
} else if (input$model == "Régulateur") {
plot(num_vars$Régulateur, num_vars$Prix,
xlab = "Régulateur", ylab = "Prix",
main = "Régression : Prix en fonction de Régulateur")
abline(model3, col = "blue")
points(input$value_Régulateur, predict(model3, data.frame(Régulateur = input$value_Régulateur)), col = "red", pch = 17)
}
})
}
# Lancer l'application
shinyApp(ui = ui, server = server)
